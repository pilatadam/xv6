xv6 is a re-implementation of Dennis Ritchie's and Ken Thompson's Unix
Version 6 (v6).  xv6 loosely follows the structure and style of v6,
but is implemented for a modern RISC-V multiprocessor using ANSI C.

ACKNOWLEDGMENTS

xv6 is inspired by John Lions's Commentary on UNIX 6th Edition (Peer
to Peer Communications; ISBN: 1-57398-013-7; 1st edition (June 14,
2000)).  See also https://pdos.csail.mit.edu/6.1810/, which provides
pointers to on-line resources for v6.

The code in the files that constitute xv6 is
Copyright 2006-2024 Frans Kaashoek, Robert Morris, and Russ Cox.

BUILDING AND RUNNING XV6

You will need a RISC-V "newlib" tool chain from
https://github.com/riscv/riscv-gnu-toolchain, and qemu compiled for
riscv64-softmmu.  Once they are installed, and in your shell
search path, you can run "make qemu".

Added features:
[labX] - Assignments for 6.1810
[*]    - Additional features

[lab1] sleep (user/sleep.c)
-> User-level sleep program.
-> Sleep pauses for a user-specified number of ticks.

[lab1] pingpong (user/pingpong.c)
-> User-level program that uses xv6 system calls to ''ping-pong'' a byte 
   between two processes over a pair of pipes, one for each direction.

[lab1] primes (user/primes.c)
-> The sieve of Eratosthenes problem solved using CSP (Communicating Sequential Processes)
   with pipes.
-> More: https://swtch.com/~rsc/thread/

[lab1] find (user/find.c)
-> Simple version of the UNIX find program
-> Finds all the files in a directory tree with a specific name

[*] clear
-> Traditional terminal function to clear previous content.
-> Works with C-l in terminal or as a sh function.

[*] uptime
-> Prints the uptime in terms of ticks.

[*] shell command history
-> Store commands/calls passed to shell to a doubly-linked list structure
   that keeps track of all recent commands.
-> Retrieve them with arrow keys.
-> Added provisory shell command "hls" to print all of them and run them by their
   depth in the tree.

TO-DO:
-> Add shell command history feature with arrows
-> Print current working directory in shell
